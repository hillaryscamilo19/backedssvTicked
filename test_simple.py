"""
Prueba simple y r√°pida del correo SSV
"""
import smtplib
from email.mime.text import MIMEText

def test_ssv_email():
    print("üß™ PRUEBA SIMPLE DE CORREO SSV")
    print("=" * 40)
    
    # Configuraci√≥n
    email_user = "soportetecnico@ssv.com.do"
    email_password = input("Ingresa la contrase√±a del correo: ")
    
    if not email_password:
        print("‚ùå No se ingres√≥ contrase√±a")
        return
    
    # Lista de configuraciones a probar
    configs = [
        {
            "name": "SSL 465 - shared70",
            "server": "shared70.accountservergroup.com",
            "port": 465,
            "use_ssl": True
        },
        {
            "name": "STARTTLS 587 - shared70", 
            "server": "shared70.accountservergroup.com",
            "port": 587,
            "use_ssl": False
        },
        {
            "name": "SSL 465 - mail.ssv",
            "server": "mail.ssv.com.do",
            "port": 465,
            "use_ssl": True
        },
        {
            "name": "STARTTLS 587 - mail.ssv",
            "server": "mail.ssv.com.do", 
            "port": 587,
            "use_ssl": False
        }
    ]
    
    for config in configs:
        print(f"\nüîç Probando: {config['name']}")
        print(f"   Servidor: {config['server']}:{config['port']}")
        
        try:
            # Establecer conexi√≥n
            if config['use_ssl']:
                server = smtplib.SMTP_SSL(config['server'], config['port'], timeout=15)
            else:
                server = smtplib.SMTP(config['server'], config['port'], timeout=15)
                server.starttls()
            
            # Intentar autenticaci√≥n
            server.login(email_user, email_password)
            
            print(f"   ‚úÖ √âXITO: {config['name']}")
            
            # Intentar enviar un correo de prueba
            try:
                msg = MIMEText("Prueba de configuraci√≥n SMTP - SSV")
                msg['Subject'] = "Prueba SMTP SSV"
                msg['From'] = email_user
                msg['To'] = email_user  # Enviar a s√≠ mismo
                
                server.send_message(msg)
                print(f"   üìß Correo de prueba enviado exitosamente")
                
            except Exception as e:
                print(f"   ‚ö†Ô∏è  Autenticaci√≥n OK, pero error enviando: {str(e)}")
            
            server.quit()
            
            # Si llegamos aqu√≠, esta configuraci√≥n funciona
            print(f"\nüéâ CONFIGURACI√ìN EXITOSA: {config['name']}")
            print("   Usa esta configuraci√≥n en tu .env:")
            print(f"   SMTP_SERVER={config['server']}")
            print(f"   SMTP_PORT={config['port']}")
            print(f"   USE_SSL={'true' if config['use_ssl'] else 'false'}")
            print(f"   USE_TLS={'false' if config['use_ssl'] else 'true'}")
            break
            
        except smtplib.SMTPAuthenticationError as e:
            print(f"   ‚ùå Error de autenticaci√≥n: {str(e)}")
        except Exception as e:
            print(f"   ‚ùå Error de conexi√≥n: {str(e)}")
    
    else:
        print("\n‚ùå NINGUNA CONFIGURACI√ìN FUNCION√ì")
        print("\nüí° Posibles soluciones:")
        print("1. Verificar contrase√±a en el panel de hosting")
        print("2. Probar login en https://webmail.ssv.com.do")
        print("3. Contactar soporte de hosting para configuraci√≥n SMTP")
        print("4. Verificar si requiere contrase√±a de aplicaci√≥n")

if __name__ == "__main__":
    test_ssv_email()
